<script src="//maps.google.com/maps/api/js?key=AIzaSyC4Av88lDd9X-Mm8YINVUcNMZ3AnhE435U"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

<p id="notice"><%= notice %></p>


<div class="col s12 m7">
    <h4 class="header">Stores</h4>
    <% @stores.each do |store| %>

    <div class="card horizontal">
      <div class="card-image">
        <% if store.logo.attached? %>
          <%=image_tag store.logo%>
        <% end %>
      </div>
      <div class="card-stacked">
        <div class="card-content">
          <p><%= store.name %></p>
          <p><%= store.address %></p>
        </div>
        <div class="card-action">
          <td><%= link_to 'Show', store %></td>
          <td><%= link_to 'Edit', edit_store_path(store) %></td>
          <td><%= link_to 'Destroy', store, method: :delete, data: { confirm: 'Are you sure?' } %></td>
        </div>
      </div>
    </div>
    <% end %>

</div>


<%= link_to new_store_path ,title: "new store" do %>
  <i class="medium material-icons left">add_box</i>
<% end %> 

<%= image_tag "http://maps.googleapis.com/maps/api/staticmap?center=#{store.latitude},#{store.longitude}&markers=#{store.latitude},#{store.longitude}&zoom=7&size=640x400&key=AIzaSyA4BHW3txEdqfxzdTlPwaHsYRSZbfeIcd8"%>

<script type="text/javascript">
handler = Gmaps.build('Google');
handler.buildMap({
    provider: {
      disableDefaultUI: true
      // pass in other Google Maps API options here
    },
    internal: {
      id: 'map'
    }
  },
  function(){
    markers = handler.addMarkers([
      {
        "lat": 0,
        "lng": 0,
        "picture": {
          "url": "https://addons.cdn.mozilla.net/user-media/addon_icons/13/13028-64.png",
          "width":  32,
          "height": 32
        },
        "infowindow": "hello!"
      }
    ]);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  }
);
</script>